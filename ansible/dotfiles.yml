- name: Get dotfiles
  git:
     repo: "{{ dotfiles_repo }}"
     dest: "{{ dotfiles_dir }}"
  ignore_errors: True
  failed_when: False

- name: Run firefox in headless mode (makes firefox create all directories it needs)
  shell: firefox -headless >/dev/null 2>&1 &
  ignore_errors: True
  failed_when: False
  no_log: True

- name: Stop firefox
  command: pkill firefox
  ignore_errors: True
  failed_when: False
  no_log: True

- name: Find firefox folder
  find:
    paths: ~/.mozilla/firefox
    patterns: '*.default-release*'
    file_type: directory
  register: result

- name: Get the result of the find above
  set_fact:
    ff_dir: "{{ ff_dir + [item.path] }}"
  with_items: "{{ result.files }}"
  no_log: True

- name: Check if local.toml exist
  stat:
    path: "{{ dotter_local }}"
  register: stat_result

- name: Create local.toml if it is not there yet
  file:
    path: "{{ dotter_local }}"
    state: touch
  when: not stat_result.stat.exists

- name: Set dotfiles to be deployed
  blockinfile:
      dest: "{{ dotter_local }}"
      content: |
        packages = ["{{ dotter_local_packages }}"]

        [files]
        # toolkit.legacyUserProfileCustomizations.stylesheets should be enabled in about:config
        firefox = "{{ ff_dir[0] }}/chrome"

- name: Deploy dotfiles for user
  shell: chdir="{{ dotfiles_dir }}" dotter
  ignore_errors: True
  failed_when: False
  no_log: True

- name: Configure zsh for root
  become: true
  file:
    src: "{{ dotfiles_dir }}/zsh/.zshrc"
    dest: ~/.zshrc
    state: link

- name: Configure alacritty for root
  become: true
  file:
    src: "{{ dotfiles_dir }}/alacritty/.alacritty.yml"
    dest: ~/.alacritty.yml
    state: link

- name: Configure starship for root
  become: true
  file:
    src: "{{ dotfiles_dir }}/zsh/starship.toml"
    dest: ~/.config/starship.toml
    state: link

- name: Configure nvim for root
  become: true
  file:
    src: "{{ dotfiles_dir }}/vim"
    dest: ~/.config/nvim
    state: link

