#!/usr/bin/env bash

hc() {
    herbstclient "$@"
}

hc emit_hook reload

xsetroot -solid '#2f3540'
nitrogen --restore &
picom -b
fcitx5 -d &
light-locker &
greenclip daemon &
libinput-gestures-setup autostart start

# remove all existing keybindings
hc keyunbind --all
setxkbmap -layout 'us,ru' -option 'grp:alt_shift_toggle,grp_led:scroll'

# keybindings (use xev to figure out the keysyms)
Mod=Mod4   # Use the super key as the main modifier
Alt=Mod1
Term=alacritty

hc keybind $Mod-Shift-q quit
hc keybind $Mod-Shift-r reload
hc keybind $Mod-Shift-c close

# Apps keybindings
hc keybind $Mod-Return spawn $Term
hc keybind $Mod-Ctrl-p spawn flameshot gui
hc keybind 0xff61 spawn flameshot full -c -p ~/Pictures/screenshots
#hc keybind $Mod-z spawn import -window "$(xdotool getwindowfocus)" ~/Pictures/screenshots/"$(date '+%Y%m%d-%H%M%S')".png
#hc keybind 0xff7f spawn light-locker-command -l
hc keybind $Mod-l spawn light-locker-command -l
hc keybind $Mod-Escape spawn ~/.config/rofi/bin/sysmenu.sh

# Rofi keybindings
hc keybind Ctrl-space spawn rofi -modi combi,ssh,file-browser-extended -show combi -combi-modi window,drun,ssh -async-pre-read -matching fuzzy -sidebar-mode -no-levenshtein-sort
hc keybind Ctrl-0 spawn xclip -o | xclip -selection clipboard -i
#hc keybind $Alt-Ctrl-p spawn ~/.config/rofi/bin/passmenu.sh
hc keybind $Alt-Ctrl-p spawn rofi-pass
hc keybind $Alt-Ctrl-r spawn ~/.config/rofi/bin/remmina.sh
hc keybind $Alt-Ctrl-w spawn ~/.config/rofi/bin/watson-rofi
hc keybind $Alt-Ctrl-t spawn rofi_trans
hc keybind $Alt-Ctrl-n spawn networkmanager_dmenu
hc keybind $Alt-Ctrl-b spawn rofi-bluetooth
hc keybind $Alt-Ctrl-x spawn rofi -modi "clipboard:greenclip print" -show clipboard -run-command '{cmd}'

# basic movement
# focusing clients
hc keybind Ctrl-Left  focus left
hc keybind Ctrl-Down  focus down
hc keybind Ctrl-Up    focus up
hc keybind Ctrl-Right focus right
#hc keybind $Mod-h     focus left
#hc keybind $Mod-j     focus down
#hc keybind $Mod-k     focus up
#hc keybind $Mod-l     focus right

# moving clients
hc keybind $Mod-Shift-Left  shift left
hc keybind $Mod-Shift-Down  shift down
hc keybind $Mod-Shift-Up    shift up
hc keybind $Mod-Shift-Right shift right
hc keybind $Mod-Shift-h     shift left
hc keybind $Mod-Shift-j     shift down
hc keybind $Mod-Shift-k     shift up
hc keybind $Mod-Shift-l     shift right

# splitting frames
# create an empty frame at the specified direction
hc keybind $Mod-u       split   bottom  0.5
hc keybind $Mod-o       split   right   0.5
# let the current frame explode into subframes
hc keybind $Mod-Control-space split explode

# resizing frames
resizestep=0.01
hc keybind $Mod-Control-h       resize left +$resizestep
hc keybind $Mod-Control-j       resize down +$resizestep
hc keybind $Mod-Control-k       resize up +$resizestep
hc keybind $Mod-Control-l       resize right +$resizestep
hc keybind $Mod-Control-Left    resize left +$resizestep
hc keybind $Mod-Control-Down    resize down +$resizestep
hc keybind $Mod-Control-Up      resize up +$resizestep
hc keybind $Mod-Control-Right   resize right +$resizestep

# volume control
#hc keybind 0x1008ff12 spawn ~/.config/polybar/scripts/i3vol mute
#hc keybind 0x1008ff11 spawn ~/.config/polybar/scripts/i3vol down 5
#hc keybind 0x1008ff13 spawn ~/.config/polybar/scripts/i3vol up 5
hc keybind 0xffbe spawn pulseaudio-control togmute
hc keybind 0xffbf spawn pulseaudio-control --volume-max 120 down
hc keybind 0xffc0 spawn pulseaudio-control --volume-max 120 up
# backlight control
# xbacklight only works with intel. Radeon does not support the RandR backlight property
#hc keybind 0x1008ff03 spawn xbacklight -dec 5
#hc keybind 0x1008ff02 spawn xbacklight -inc 5
# for AMD
hc keybind 0xffc3 spawn light -U 5
hc keybind 0xffc4 spawn light -A 5


# tags
tag_names=( {1..5} )
tag_keys=( {1..5} 0 )

hc rename default "${tag_names[0]}" || true
for i in "${!tag_names[@]}" ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if [ -n "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done

# cycle through tags
hc keybind $Mod-Right  use_index +1 --skip-visible
hc keybind $Mod-Left   use_index -1 --skip-visible
# cycle through tags while dragging along some window (e.g. Picture-in-Picture)
hc keybind $Mod-period spawn ~/.config/herbstluftwm/cycletag +1
hc keybind $Mod-comma  spawn ~/.config/herbstluftwm/cycletag -1

# layouting
hc keybind $Mod-r remove
hc keybind $Mod-s floating toggle
hc keybind $Mod-f fullscreen toggle
hc keybind $Mod-p pseudotile toggle
# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-space                                                          \
             or , and . compare tags.focus.curframe_wcount = 2                 \
                      . cycle_layout +1 vertical horizontal max vertical grid  \
                , cycle_layout +1

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus
hc keybind $Mod-BackSpace   cycle_monitor
hc keybind $Mod-Tab         cycle_all +1
hc keybind $Mod-Shift-Tab   cycle_all -1
hc keybind $Mod-c cycle
hc keybind $Mod-i jumpto urgent

# theme
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1
hc set frame_border_active_color '#FFFFFF'
hc set frame_border_normal_color '#2f343f'
hc set frame_bg_normal_color '#2f343f'
hc set frame_bg_active_color '#FFFFFF'
hc set frame_border_width 0
hc set show_frame_decorations on
hc set frame_bg_transparent on
hc set frame_transparent_width 0
hc set frame_gap 10
hc set tabbed_max true

hc attr theme.active.color '#FCBF49'
hc attr theme.normal.color '#FFFFFF'
hc attr theme.urgent.color orange
hc attr theme.inner_width 1
hc attr theme.inner_color black
hc attr theme.border_width 0
hc attr theme.floating.border_width 0
hc attr theme.floating.outer_width 1
hc attr theme.floating.outer_color black
hc attr theme.active.inner_color '#FCBF49'
hc attr theme.active.outer_color '#FCBF49'
hc attr theme.background_color '#2f3540'

# hc attr theme.title_height 15
# hc attr theme.title_font 'Dejavu Sans:pixelsize=12'
# hc attr theme.padding_top 5
# # hc attr theme.padding_bottom 5
# # hc attr theme.padding_left 5
# # hc attr theme.padding_right 5
# hc attr theme.active.color '#FCBF49'
# hc attr theme.title_color '#2f3540'
# hc attr theme.normal.color '#323232dd'
# hc attr theme.urgent.color '#7811A1dd'
# hc attr theme.normal.title_color '#2f3540'
# hc attr theme.inner_width 0
# hc attr theme.inner_color black
# hc attr theme.border_width 0
# hc attr theme.floating.border_width 0
# hc attr theme.floating.outer_width 0
# hc attr theme.floating.outer_color black
# hc attr theme.active.inner_color '#789161'
# hc attr theme.urgent.inner_color '#9A65B0'
# hc attr theme.normal.inner_color '#606060'
# # copy inner color to outer_color
# for state in active urgent normal ; do
#     hc substitute C theme.${state}.inner_color \
#         attr theme.${state}.outer_color C
# done
# hc attr theme.tiling.outer_width 1
# hc attr theme.background_color '#141414'


hc set window_gap 0
hc set frame_padding 0
hc set smart_window_surroundings on
hc set smart_frame_surroundings off
hc set mouse_recenter_gap 0
hc set hide_covered_windows false

hc keybind $Mod-Shift-f attr clients.focus.floating toggle

hc set default_frame_layout 1
hc set_layout horizontal
# Fix layout on all tags
hc substitute ALGO settings.default_frame_layout \
    foreach T tags.by-name. \
    sprintf ATTR '%c.tiling.root.algorithm' T \
    set_attr ATTR ALGO

# rules
hc unrule -F
#hc rule class=XTerm tag=3 # move all xterms to tag 3
hc rule focus=on # normally focus new clients
#hc rule focus=off # normally do not focus new clients
# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on
# `xprop` to find out windowtype, class etc
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' pseudotile=off floating=on focus=on floatplacement=center
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off
hc rule title~'Picture-in-Picture' pseudotile=off floating=on focus=on
hc rule instance~'Toolkit' pseudotile=off floating=on focus=on
hc rule instance~'floatingTerminal' pseudotile=off floating=on focus=on floatplacement=center
hc rule class~'[Yy]ad' floating=on
hc rule class~'[Nn]m-connection-editor' pseudotile=off floating=on focus=on
hc rule class~'Gnome-calendar' pseudotile=off floating=on focus=on
hc rule class~'qrcode' pseudotile=off floating=on focus=on floatplacement=center
hc rule class~'firefox' pseudotile=off tag=1
hc rule class~'[Tt]hunderbird-beta' tag=2
hc rule class~'TelegramDesktop' pseudotile=off floating=off tag=2
hc rule class~'f5vpn' pseudotile=off floating=on focus=on floatplacement=center tag=5
hc rule class~'Blueman-manager' pseudotile=off floating=on focus=on floatplacement=center
hc rule class~'Navigator' pseudotile=off floating=on focus=on floatplacement=center

hc set tree_style '╾│ ├└╼─┐'

# unlock, just to be sure
hc unlock

# do multi monitor setup here, e.g.:
# hc set_monitors 1280x1024+0+0 1280x1024+1280+0
# or simply:
hc detect_monitors
#hc set_monitors 1920x1175+0+25 1920x1055+1920+25
#hc set_monitors 1920x1055+0+25
hc pad 0 25 0 0 0

# find the panel
#panel=~/.config/herbstluftwm/panel.sh
panel=$HOME/.config/polybar/launch.sh
[ -x "$panel" ] || panel=/etc/xdg/herbstluftwm/panel.sh
for monitor in $(herbstclient list_monitors | cut -d: -f1) ; do
    # start it on each monitor
    "$panel" "$monitor" &
done
